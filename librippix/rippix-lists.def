/* Copyright (C) 2012 Aljosha Papsch <papsch.al@googlemail.com>

   This file is part of librippix.

   librippix is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   librippix is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with librippix.  If not, see <http://www.gnu.org/licenses/>. */

autogen definitions errlist;
errlist = { errlist_key = fork;
	errlist_value = "An error has occured while forking"; };
errlist = { errlist_key = pipe_creation;
	errlist_value = "Cannot create pipe"; };
errlist = { errlist_key = null_open;
	errlist_value = "Cannot open /dev/null"; };
errlist = { errlist_key = malloc;
	errlist_value = "Memory allocation error has occurred"; };
errlist = { errlist_key = fdopen;
	errlist_value = "An error has occurred while trying to reopen a file as a stream"; };
errlist = { errlist_key = pipe_read;
	errlist_value = "Cannot read from the pipe"; };
errlist = { errlist_key = file_delete;
	errlist_value = "Cannot delete file"; };
errlist = { errlist_key = pty_open;
	errlist_value = "Cannot open a pty. Maybe all ptys are busy"; };
errlist = { errlist_key = end_error;
	errlist_value = "TODO"; };
errlist = { errlist_key = too_many_args;
	errlist_value = "Too many arguments"; };
errlist = { errlist_key = job_in_progress;
	errlist_value = "Job is already in progress"; };
errlist = { errlist_key = nothing_to_do;
	errlist_value = "Please select a track to rip or encode. If you did select tracks, they may already have been ripped"; };
errlist = { errlist_key = cd_paranoia_misc;
	errlist_value = "Make sure an audio disc is in the drive and that you are either running Rippix as root, are a member of the cdrom group, or otherwise have appropriate permissions to access the CDROM device"; };
errlist = { errlist_key = too_long_file_name;
	errlist_value = "The file name is too long"; };
errlist = { errlist_key = empty_entry;
	errlist_value = "Some entry(s) are empty"; };
errlist = { errlist_key = invalid_file_selection;
	errlist_value = "Invalid files selected"; };
errlist = { errlist_key = cddb_no_connect;
	errlist_value = "Could not connect to CDDB server"; };
errlist = { errlist_key = cddb_connect_refused;
	errlist_value = "Connection refused from CDDB server"; };
errlist = { errlist_key = cddb_server;
	errlist_value = "CDDB server error"; };
errlist = { errlist_key = cddb_not_found;
	errlist_value = "CD not found in CD database"; };
errlist = { errlist_key = rx_parsing;
	errlist_value = "Cannot parse the format string"; };
errlist = { errlist_key = plugin_not_present;
	errlist_value = "Plugin is not present"; };
errlist = { errlist_key = creat_file;
	errlist_value = "Error while locking file. Make sure the ripping and encoding directories are correct and you have permissions to write to those directories"; };
errlist = { errlist_key = rip_dir_not_writable;
	errlist_value = "The ripping directory is not writable"; };
errlist = { errlist_key = enc_dir_not_writable;
	errlist_value = "The encoding directory is not writable"; };
errlist = { errlist_key = rip_dir_creat;
	errlist_value = "Cannot create ripping directory"; };
errlist = { errlist_key = enc_dir_creat;
	errlist_value = "Cannot create encoding directory"; };
errlist = { errlist_key = cdparanoia_no_disc;
	errlist_value = "Mak sure an audio disc is in the CDROM device"; };
errlist = { errlist_key = cdparanoia_no_perms;
	errlist_value = "Make sure that you are a member of the the cdrom group,or otherwise have appropriate permissions to access the CDROM device"; };

autogen definitions dialoglist;
dialoglist = { dialoglist_key = abort_confirm;
	   dialoglist_prim = "Abort confirmation";
	   dialoglist_sec = "Do you really want to abort?";
};
dialoglist = { dialoglist_key = delete_on_abort;
	   dialoglist_prim = "Really delete?";
	   dialoglist_sec = "Do you want to delete current file?";
};
dialoglist = { dialoglist_key = overwrite_confirm;
	   dialoglist_prim = "Really overwrite?";
	   dialoglist_sec = "The file already exists. Do you want to overwrite?";
};
dialoglist = { dialoglist_key = enter_file_name;
	   dialoglist_prim = "Enter file name";
	   dialoglist_sec = "Enter new file name";
};
dialoglist = { dialoglist_key = create_config_confirm;
	   dialoglist_prim = "Create configuration file?";
	   dialoglist_sec = "The configuration file does not exist. Do you want to create this file?";
};
dialoglist = { dialoglist_key = rip_part_low;
	   dialoglist_prim = "Low discspace warning";
	   dialoglist_sec = "There is less than 500 MB free space left on the partition used for ripped files. Do you want to continue?";
};
dialoglist = { dialoglist_key = enc_part_low;
	   dialoglist_prim = "Low discspace warning";
	   dialoglist_sec = "There is less than 100 MB free space left on the partition used for encoded files. Do you want to continue?";
};

autogen definitions statuslist;
statuslist = { statuslist_key = finish_rip;
	   statuslist_value = "Finished ripping";
};
statuslist = { statuslist_key = finish_enc;
	   statuslist_value = "Finished encoding";
};

autogen definitions configlist;
configlist = { configlist_key = rip_ratio;
	   configlist_type = CONF_VALUE_FLOAT;
	   configlist_value = "rip_ratio";
};
configlist = { configlist_key = enc_ratio;
	   configlist_type = CONF_VALUE_FLOAT;
	   configlist_value = "encode_ratio";
};
configlist = { configlist_key = shell_for_exec;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "shell_for_execution";
};
configlist = { configlist_key = rip_dir;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "rip_dir";
};
configlist = { configlist_key = enc_dir;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "encode_dir";
};
configlist = { configlist_key = cddb_dir;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "cddb_dir";
};
configlist = { configlist_key = enc_filen_format;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "encode_filename_format";
};
configlist = { configlist_key = rip_filen_format;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "rip_filename_format";
};
configlist = { configlist_key = prep_char;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "prepend_char";
};
configlist = { configlist_key = enc_from_exist;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "encode_from_existing_files";
};
configlist = { configlist_key = ask_file_exist;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "ask_when_file_exists";
};
configlist = { configlist_key = app_file_ext;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "autoappend_file_extension";
};
configlist = { configlist_key = keep_ripped;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "keep_ripped_files";
};
configlist = { configlist_key = ripper;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "ripper";
};
configlist = { configlist_key = ripper_plugin;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "ripper_plugin";
};
configlist = { configlist_key = encoder;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "encoder";
};
configlist = { configlist_key = encoder_type;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "encoder_type";
};
configlist = { configlist_key = encoder_bitrate;
	   configlist_type = CONF_VALUE_INT;
	   configlist_value = "encoder_bitrate";
};
configlist = { configlist_key = encoder_varbitrate;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "encoder_varbitrate";
};
configlist = { configlist_key = encoder_vbrqual;
	   configlist_type = CONF_VALUE_INT;
	   configlist_value = "encoder_vbrquality";
};
configlist = { configlist_key = encoder_priority;
	   configlist_type = CONF_VALUE_INT;
	   configlist_value = "encoder_priority";
};
configlist = { configlist_key = encoder_highqual;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "encoder_hiqhquality";
};
configlist = { configlist_key = encoder_usecrc;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "encoder_usercrc";
};
configlist = { configlist_key = encoder_extraopts;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "encoder_extraoptions";
};
configlist = { configlist_key = encoder_fullcmd;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "encoder_fullcommand";
};
configlist = { configlist_key = encoder_plugin;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "encoder_plugin";
};
configlist = { configlist_key = cdpl_playcmd;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "cdplayer_play_command";
};
configlist = { configlist_key = cdpl_stopcmd;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "cdplayer_stop_command";
};
configlist = { configlist_key = wavpl_cmd;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "wavplayer_command";
};
configlist = { configlist_key = mp3pl_cmd;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "mp3player_command";
};
configlist = { configlist_key = cddb_server;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "cddb_server";
};
configlist = { configlist_key = cddb_port;
	   configlist_type = CONF_VALUE_INT;
	   configlist_value = "cddb_port";
};
configlist = { configlist_key = cddb_usehttp;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "cddb_usehttp";
};
configlist = { configlist_key = cddb_proxysrv;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "cddb_proxyserver";
};
configlist = { configlist_key = cddb_proxyprt;
	   configlist_type = CONF_VALUE_INT;
	   configlist_value = "cddb_proxyport";
};
configlist = { configlist_key = cddb_convspc;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "cddb_convertspace";
};
configlist = { configlist_key = cddb_mkdirs;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "cddb_make_directories";
};
configlist = { configlist_key = cddb_creatid3;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "cddb_create_id3";
};
configlist = { configlist_key = creatpl;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "create_playlist";
};
configlist = { configlist_key = cddb_autolookup;
	   configlist_type = CONF_VALUE_BOOL;
	   configlist_value = "cddb_autolookup";
};
configlist = { configlist_key = cddb_formatstr;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "cddb_formatstring";
};
configlist = { configlist_key = cddb_dirformatstr;
	   configlist_type = CONF_VALUE_STRING;
	   configlist_value = "cddb_dir_formatstring";
};